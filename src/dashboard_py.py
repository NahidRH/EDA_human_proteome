# -*- coding: utf-8 -*-
"""dashboard.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-Ytiu5w_9_mji7oZXqwmu0CHJWbnMH47
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st

# Load data
@st.cache_data
def load_data():
      df = pd.read_csv("data/sample_uniprot_100.tsv", sep='\t')
      return df

df = load_data()
st.title("ðŸ§¬ EDA Dashboard: Human Proteome")

# --- Sidebar ---
st.sidebar.header("Options")
plot_type = st.sidebar.selectbox("Choose a plot:", [
    "Sequence Length Distribution",
    "Molecular Weight Distribution",
    "Top Functional Keywords",
    "Top Subcellular Locations"
])

# --- Main content ---
if plot_type == "Sequence Length Distribution":
    st.subheader("Protein Sequence Lengths")
    fig, ax = plt.subplots()
    sns.histplot(df['Length'], bins=50, kde=True, ax=ax)
    ax.set_xlabel("Length (Amino Acids)")
    ax.set_ylabel("Count")
    st.pyplot(fig)

elif plot_type == "Molecular Weight Distribution":
    st.subheader("Molecular Weight of Proteins")
    fig, ax = plt.subplots()
    sns.histplot(df['Mass'], bins=50, kde=True, color='orange', ax=ax)
    ax.set_xlabel("Mass (Daltons)")
    ax.set_ylabel("Count")
    st.pyplot(fig)

elif plot_type == "Top Functional Keywords":
    st.subheader("Most Common Functional Keywords")
    df['Keywords'] = df['Keywords'].fillna('')
    keywords = df['Keywords'].str.split(';').explode().str.strip()
    top_keywords = keywords.value_counts().head(20)
    fig, ax = plt.subplots()
    sns.barplot(y=top_keywords.index, x=top_keywords.values, ax=ax)
    ax.set_xlabel("Count")
    ax.set_ylabel("Keyword")
    st.pyplot(fig)

elif plot_type == "Top Subcellular Locations":
    st.subheader("Most Common Subcellular Locations")
    df['Subcellular location [CC]'] = df['Subcellular location [CC]'].fillna('')
    locations = df['Subcellular location [CC]'].str.split(';').explode().str.strip()
    top_locations = locations.value_counts().head(10)
    fig, ax = plt.subplots()
    sns.barplot(y=top_locations.index, x=top_locations.values, ax=ax)
    ax.set_xlabel("Count")
    ax.set_ylabel("Location")
    st.pyplot(fig)
